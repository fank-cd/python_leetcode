# coding:utf-8
# 最大子序和



# 给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。
#
# 示例:
#
# 输入: [-2,1,-3,4,-1,2,1,-5,4],
# 输出: 6
# 解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。
#
# 进阶:
#
# 如果你已经实现复杂度为 O(n) 的解法，尝试使用更为精妙的分治法求解。
#


# 这道题一定是考虑O（n）的,n^2是通过不了的
# 思路是边遍历一边计划，思想还是动态规划的思想，保存子问题的结果，如果子问题为负，则相加一定必当前数小
# 这时候则不进行操作，只要为正，则相加，这样可以求出最大值
# 最后返回最大的nums就可以了

class Solution(object):
    def maxSubArray(self, nums):
        """
        :type nums: List[int]
        :rtype: int
         """
        for i in range(1, len(nums)):
            nums[i] = nums[i] + max(nums[i-1], 0)
        return max(nums)
